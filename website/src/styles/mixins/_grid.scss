@use 'sass:math';

$grid-gutter: 16px !default;

// use like grid-span(1, 4) for a one-quarter column
@function grid-span($dividend: 0, $divisor: 1) { 
  @return 100% * math.div($dividend, $divisor);
}

// use for elements that act as wrappers for columns
@mixin grid-row() {
  box-sizing: border-box;
  display: flex;
  flex: 0 1 auto;
  flex-direction: row;
  flex-wrap: wrap;
  margin-right: - math.div($grid-gutter, 2);
  margin-left: - math.div($grid-gutter, 2);
}

// flip an existing row's direction
@mixin grid-row-reverse() {
  flex-direction: row-reverse;
}

// use for elements that act as columns
@mixin grid-column($dividend: 0, $divisor: 1) {
  box-sizing: border-box; 
  flex: 0 0 auto;
  padding-right: math.div($grid-gutter, 2);
  padding-left: math.div($grid-gutter, 2);
  @if ($dividend != 0) {
    @include grid-column-width($dividend, $divisor);
  }
}

// set column element width
@mixin grid-column-width($dividend: 0, $divisor: 1) {
  flex-basis: grid-span($dividend, $divisor);
  max-width: grid-span($dividend, $divisor);
}

// push column element to the right
@mixin grid-column-offset-left($dividend: 0, $divisor: 1) {
  margin-left: grid-span($dividend, $divisor);
}

// push column element to the left
@mixin grid-column-offset-right($dividend: 0, $divisor: 1) {
  margin-right: grid-span($dividend, $divisor);
}
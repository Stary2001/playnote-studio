#pragma once

#include <stdio.h>
#include <stdbool.h>
#include "pd_api.h"
#include "ppm.h"

static const u8 patternMaskNone[] =
{
  0x7F, 0xBF, 0xDF, 0xEF, 0xF7, 0xFB, 0xFD, 0xFE, // odd row
  0x7F, 0xBF, 0xDF, 0xEF, 0xF7, 0xFB, 0xFD, 0xFE  // even row
};

// static const u32 patternMaskNone[] =
// {
//   // odd row
//   0x7FFFFFFF, 0xBFFFFFFF, 0xDFFFFFFF, 0xEFFFFFFF, 0xF7FFFFFF, 0xFBFFFFFF, 0xFDFFFFFF, 0xFEFFFFFF,
//   0xFF7FFFFF, 0xFFBFFFFF, 0xFFDFFFFF, 0xFFEFFFFF, 0xFFF7FFFF, 0xFFFBFFFF, 0xFFFDFFFF, 0xFFFEFFFF,
//   0xFFFF7FFF, 0xFFFFBFFF, 0xFFFFDFFF, 0xFFFFEFFF, 0xFFFFF7FF, 0xFFFFFBFF, 0xFFFFFDFF, 0xFFFFFEFF,
//   0xFFFFFF7F, 0xFFFFFFBF, 0xFFFFFFDF, 0xFFFFFFEF, 0xFFFFFFF7, 0xFFFFFFFB, 0xFFFFFFFD, 0xFFFFFFFE,
//   // even row
//   0x7FFFFFFF, 0xBFFFFFFF, 0xDFFFFFFF, 0xEFFFFFFF, 0xF7FFFFFF, 0xFBFFFFFF, 0xFDFFFFFF, 0xFEFFFFFF,
//   0xFF7FFFFF, 0xFFBFFFFF, 0xFFDFFFFF, 0xFFEFFFFF, 0xFFF7FFFF, 0xFFFBFFFF, 0xFFFDFFFF, 0xFFFEFFFF,
//   0xFFFF7FFF, 0xFFFFBFFF, 0xFFFFDFFF, 0xFFFFEFFF, 0xFFFFF7FF, 0xFFFFFBFF, 0xFFFFFDFF, 0xFFFFFEFF,
//   0xFFFFFF7F, 0xFFFFFFBF, 0xFFFFFFDF, 0xFFFFFFEF, 0xFFFFFFF7, 0xFFFFFFFB, 0xFFFFFFFD, 0xFFFFFFFE
// };

static const u8 patternMaskChecker[] =
{
  0xFF, 0xBF, 0xFF, 0xEF, 0xFF, 0xFB, 0xFF, 0xFE,
  0x7F, 0xFF, 0xDF, 0xFF, 0xF7, 0xFF, 0xFD, 0xFF
};

// static const u32 patternMaskChecker[] =
// {
//   // odd row
//   0xFFFFFFFF, 0xBFFFFFFF, 0xFFFFFFFF, 0xEFFFFFFF, 0xFFFFFFFF, 0xFBFFFFFF, 0xFFFFFFFF, 0xFEFFFFFF,
//   0xFFFFFFFF, 0xFFBFFFFF, 0xFFFFFFFF, 0xFFEFFFFF, 0xFFFFFFFF, 0xFFFBFFFF, 0xFFFFFFFF, 0xFFFEFFFF,
//   0xFFFFFFFF, 0xFFFFBFFF, 0xFFFFFFFF, 0xFFFFEFFF, 0xFFFFFFFF, 0xFFFFFBFF, 0xFFFFFFFF, 0xFFFFFEFF,
//   0xFFFFFFFF, 0xFFFFFFBF, 0xFFFFFFFF, 0xFFFFFFEF, 0xFFFFFFFF, 0xFFFFFFFB, 0xFFFFFFFF, 0xFFFFFFFE,
//   // even row
//   0x7FFFFFFF, 0xFFFFFFFF, 0xDFFFFFFF, 0xFFFFFFFF, 0xF7FFFFFF, 0xFFFFFFFF, 0xFDFFFFFF, 0xFFFFFFFF,
//   0xFF7FFFFF, 0xFFFFFFFF, 0xFFDFFFFF, 0xFFFFFFFF, 0xFFF7FFFF, 0xFFFFFFFF, 0xFFFDFFFF, 0xFFFFFFFF,
//   0xFFFF7FFF, 0xFFFFFFFF, 0xFFFFDFFF, 0xFFFFFFFF, 0xFFFFF7FF, 0xFFFFFFFF, 0xFFFFFDFF, 0xFFFFFFFF,
//   0xFFFFFF7F, 0xFFFFFFFF, 0xFFFFFFDF, 0xFFFFFFFF, 0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFD, 0xFFFFFFFF
// };

static const u8 patternMaskPolka[] =
{ 
  0xFF, 0xBF, 0xFF, 0xEF, 0xFF, 0xFB, 0xFF, 0xFE,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
};

// static const u32 patternMaskPolka[] =
// { 
//   // odd row
//   0xFFFFFFFF, 0xBFFFFFFF, 0xFFFFFFFF, 0xEFFFFFFF, 0xFFFFFFFF, 0xFBFFFFFF, 0xFFFFFFFF, 0xFEFFFFFF,
//   0xFFFFFFFF, 0xFFBFFFFF, 0xFFFFFFFF, 0xFFEFFFFF, 0xFFFFFFFF, 0xFFFBFFFF, 0xFFFFFFFF, 0xFFFEFFFF,
//   0xFFFFFFFF, 0xFFFFBFFF, 0xFFFFFFFF, 0xFFFFEFFF, 0xFFFFFFFF, 0xFFFFFBFF, 0xFFFFFFFF, 0xFFFFFEFF,
//   0xFFFFFFFF, 0xFFFFFFBF, 0xFFFFFFFF, 0xFFFFFFEF, 0xFFFFFFFF, 0xFFFFFFFB, 0xFFFFFFFF, 0xFFFFFFFE,
//   // even row
//   0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
//   0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
//   0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
//   0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
// };

static const u8 patternMaskInvPolka[] =
{ 
  0x7F, 0xFF, 0xDF, 0xFF, 0xF7, 0xFF, 0xFD, 0xFF,
  0x7F, 0xBF, 0xDF, 0xEF, 0xF7, 0xFB, 0xFD, 0xFE,
};

// static const u32 patternMaskInvPolka[] =
// { 
//   // odd row
//   0x7FFFFFFF, 0xFFFFFFFF, 0xDFFFFFFF, 0xFFFFFFFF, 0xF7FFFFFF, 0xFFFFFFFF, 0xFDFFFFFF, 0xFFFFFFFF,
//   0xFF7FFFFF, 0xFFFFFFFF, 0xFFDFFFFF, 0xFFFFFFFF, 0xFFF7FFFF, 0xFFFFFFFF, 0xFFFDFFFF, 0xFFFFFFFF,
//   0xFFFF7FFF, 0xFFFFFFFF, 0xFFFFDFFF, 0xFFFFFFFF, 0xFFFFF7FF, 0xFFFFFFFF, 0xFFFFFDFF, 0xFFFFFFFF,
//   0xFFFFFF7F, 0xFFFFFFFF, 0xFFFFFFDF, 0xFFFFFFFF, 0xFFFFFFF7, 0xFFFFFFFF, 0xFFFFFFFD, 0xFFFFFFFF,
//   // even row
//   0x7FFFFFFF, 0xBFFFFFFF, 0xDFFFFFFF, 0xEFFFFFFF, 0xF7FFFFFF, 0xFBFFFFFF, 0xFDFFFFFF, 0xFEFFFFFF,
//   0xFF7FFFFF, 0xFFBFFFFF, 0xFFDFFFFF, 0xFFEFFFFF, 0xFFF7FFFF, 0xFFFBFFFF, 0xFFFDFFFF, 0xFFFEFFFF,
//   0xFFFF7FFF, 0xFFFFBFFF, 0xFFFFDFFF, 0xFFFFEFFF, 0xFFFFF7FF, 0xFFFFFBFF, 0xFFFFFDFF, 0xFFFFFEFF,
//   0xFFFFFF7F, 0xFFFFFFBF, 0xFFFFFFDF, 0xFFFFFFEF, 0xFFFFFFF7, 0xFFFFFFFB, 0xFFFFFFFD, 0xFFFFFFFE
// };

void registerExt(PlaydateAPI *playdate);